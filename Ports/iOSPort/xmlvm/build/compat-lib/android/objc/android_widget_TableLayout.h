#import "xmlvm.h"
#import "android_widget_LinearLayout.h"

// For circular include:
@class android_widget_TableRow;
@class java_lang_Object;
@class android_widget_LinearLayout_LayoutParams;
@class android_view_ViewGroup_LayoutParams;
@class android_view_View;
@class java_lang_Integer;
@class java_lang_String;
@class android_widget_TableLayout_LayoutParams;
@class java_lang_System;
@class android_widget_TableLayout;
@class android_content_Context;
@class android_util_SparseBooleanArray;
@class android_util_AttributeSet;
@class java_lang_NumberFormatException;
@class android_widget_LinearLayout;
@class android_view_View_MeasureSpec;
@class java_lang_Math;

// Automatically generated by xmlvm2obj. Do not edit!


	
@interface android_widget_TableLayout : android_widget_LinearLayout
{
@public XMLVMArray* mMaxWidths_int_ARRAYTYPE;
@public android_util_SparseBooleanArray* mStretchableColumns_android_util_SparseBooleanArray;
@public android_util_SparseBooleanArray* mShrinkableColumns_android_util_SparseBooleanArray;
@public android_util_SparseBooleanArray* mCollapsedColumns_android_util_SparseBooleanArray;
@public int mShrinkAllColumns_boolean;
@public int mStretchAllColumns_boolean;
@public int mInitialized_boolean;
@public int layouting_boolean;

}
+ (void) initialize;
- (id) init;
- (void) __init_android_widget_TableLayout___android_content_Context :(android_content_Context*)n1;
- (void) __init_android_widget_TableLayout___android_content_Context_android_util_AttributeSet :(android_content_Context*)n1 :(android_util_AttributeSet*)n2;
+ (android_util_SparseBooleanArray*) parseColumns___java_lang_String :(java_lang_String*)n1;
- (void) initTableLayout___android_content_Context_android_util_AttributeSet :(android_content_Context*)n1 :(android_util_AttributeSet*)n2;
- (void) requestRowsLayout__;
- (void) requestLayout__;
- (int) isShrinkAllColumns__;
- (void) setShrinkAllColumns___boolean :(int)n1;
- (int) isStretchAllColumns__;
- (void) setStretchAllColumns___boolean :(int)n1;
- (void) setColumnCollapsed___int_boolean :(int)n1 :(int)n2;
- (int) isColumnCollapsed___int :(int)n1;
- (void) setColumnStretchable___int_boolean :(int)n1 :(int)n2;
- (int) isColumnStretchable___int :(int)n1;
- (void) setColumnShrinkable___int_boolean :(int)n1 :(int)n2;
- (int) isColumnShrinkable___int :(int)n1;
- (void) trackCollapsedColumns___android_view_View :(android_view_View*)n1;
- (void) addView___android_view_View :(android_view_View*)n1;
- (void) addView___android_view_View_int :(android_view_View*)n1 :(int)n2;
- (void) addView___android_view_View_android_view_ViewGroup_LayoutParams :(android_view_View*)n1 :(android_view_ViewGroup_LayoutParams*)n2;
- (void) onMeasure___int_int :(int)n1 :(int)n2;
- (void) onLayout___boolean_int_int_int_int :(int)n1 :(int)n2 :(int)n3 :(int)n4 :(int)n5;
- (void) measureChildBeforeLayout___android_view_View_int_int_int_int_int :(android_view_View*)n1 :(int)n2 :(int)n3 :(int)n4 :(int)n5 :(int)n6;
- (void) measureVertical___int_int :(int)n1 :(int)n2;
- (void) findLargestCells___int :(int)n1;
- (void) shrinkAndStretchColumns___int :(int)n1;
- (void) mutateColumnsWidth___android_util_SparseBooleanArray_boolean_int_int :(android_util_SparseBooleanArray*)n1 :(int)n2 :(int)n3 :(int)n4;
- (android_widget_TableLayout_LayoutParams*) generateLayoutParams___android_util_AttributeSet :(android_util_AttributeSet*)n1;
- (android_view_ViewGroup_LayoutParams*) generateDefaultLayoutParams__;
- (int) checkLayoutParams___android_view_ViewGroup_LayoutParams :(android_view_ViewGroup_LayoutParams*)n1;
- (android_view_ViewGroup_LayoutParams*) generateLayoutParams___android_view_ViewGroup_LayoutParams :(android_view_ViewGroup_LayoutParams*)n1;
- (void) parseTableLayoutAttributes___android_content_Context_android_util_AttributeSet :(android_content_Context*)n1 :(android_util_AttributeSet*)n2;

@end

