#import "java_lang_IllegalArgumentException.h"
#import "android_util_Poolable.h"
#import "android_util_Pool.h"
#import "java_lang_String.h"
#import "android_util_PoolableManager.h"

// Automatically generated by xmlvm2obj. Do not edit!


#import "android_util_FinitePool.h"
#import "org_xmlvm_iphone_NSObject.h"


@implementation android_util_FinitePool;

+ (void) initialize
{
    if (strcmp(class_getName(self), "android_util_FinitePool") == 0) {
    }
}

- (id) init
{
    if (self = [super init]) {
        mManager_android_util_PoolableManager = (id) JAVA_NULL;
        mRoot_android_util_Poolable = (id) JAVA_NULL;
    }
    return self;
}

- (void) dealloc
{
    [mManager_android_util_PoolableManager release];
    [mRoot_android_util_Poolable release];
    if (strcmp(object_getClassName(self), "android_util_FinitePool") == 0) {
        [self dealloc__];
    }
    [super dealloc];
}

- (void) __init_android_util_FinitePool___android_util_PoolableManager :(android_util_PoolableManager*)n1
{
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    _r1.o = self;
    _r2.o = n1;
    [_r1.o retain];
    [_r2.o retain];
    [((java_lang_Object*) _r1.o) __init_java_lang_Object__];
    [((android_util_FinitePool*) _r1.o)->mManager_android_util_PoolableManager release];
    ((android_util_FinitePool*) _r1.o)->mManager_android_util_PoolableManager = _r2.o;
    [_r2.o retain];
    _r0.i = 0;
    ((android_util_FinitePool*) _r1.o)->mLimit_int = _r0.i;
    _r0.i = 1;
    ((android_util_FinitePool*) _r1.o)->mInfinite_boolean = _r0.i;
    [_r1.o release];
    [_r2.o release];
    return;
}
- (void) __init_android_util_FinitePool___android_util_PoolableManager_int :(android_util_PoolableManager*)n1 :(int)n2
{
    id        _ex = JAVA_NULL;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    _r2.o = self;
    _r3.o = n1;
    _r4.i = n2;
    _r0.o = JAVA_NULL;
    _r1.o = JAVA_NULL;
    [_r2.o retain];
    [_r3.o retain];
    [((java_lang_Object*) _r2.o) __init_java_lang_Object__];
    if (_r4.i > 0) goto label13;
    _r0.o = [[java_lang_IllegalArgumentException alloc] init];
    _r1.o = @"The pool limit must be > 0";
    [((java_lang_IllegalArgumentException*) _r0.o) __init_java_lang_IllegalArgumentException___java_lang_String:_r1.o];
    [_ex release];
    _ex = _r0.o;
   _r0.o = JAVA_NULL;
    @throw _ex;
      label13:;
    [((android_util_FinitePool*) _r2.o)->mManager_android_util_PoolableManager release];
    ((android_util_FinitePool*) _r2.o)->mManager_android_util_PoolableManager = _r3.o;
    [_r3.o retain];
    ((android_util_FinitePool*) _r2.o)->mLimit_int = _r4.i;
    [_r0.o release];
    _r0.i = 0;
    ((android_util_FinitePool*) _r2.o)->mInfinite_boolean = _r0.i;
    [_r1.o release];
    [_r2.o release];
    [_r3.o release];
    [_ex release];
    return;
}
- (android_util_Poolable*) acquire__
{
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    _r3.o = self;
    _r0.o = JAVA_NULL;
    _r1.o = JAVA_NULL;
    [_r3.o retain];
    _r1.o = ((android_util_FinitePool*) _r3.o)->mRoot_android_util_Poolable;
    [_r1.o retain];
    if (_r1.o == JAVA_NULL) goto label32;
    _r0.o = ((android_util_FinitePool*) _r3.o)->mRoot_android_util_Poolable;
    [_r0.o retain];
    [_r1.o release];
    _r1.o = [((android_util_Poolable*) _r0.o) getNextPoolable__];
    _r1.o = _r1.o;
    [((android_util_FinitePool*) _r3.o)->mRoot_android_util_Poolable release];
    ((android_util_FinitePool*) _r3.o)->mRoot_android_util_Poolable = _r1.o;
    [_r1.o retain];
    _r4.i = ((android_util_FinitePool*) _r3.o)->mPoolCount_int;
    _r2.i = 1;
    _r4.i = _r4.i - _r2.i;
    ((android_util_FinitePool*) _r3.o)->mPoolCount_int = _r4.i;
    label20:;
    if (_r0.o == JAVA_NULL) goto label31;
    [_r1.o release];
    _r1.o = JAVA_NULL;
    [((android_util_Poolable*) _r0.o) setNextPoolable___java_lang_Object:_r1.o];
    [_r1.o release];
    _r1.o = ((android_util_FinitePool*) _r3.o)->mManager_android_util_PoolableManager;
    [_r1.o retain];
    [((android_util_PoolableManager*) _r1.o) onAcquired___android_util_Poolable:_r0.o];
    label31:;
    [_r1.o release];
    [_r3.o release];
    return _r0.o;
    label32:;
    [_r1.o release];
    _r1.o = ((android_util_FinitePool*) _r3.o)->mManager_android_util_PoolableManager;
    [_r1.o retain];
    _r0.o = [((android_util_PoolableManager*) _r1.o) newInstance__];
    goto label20;
}
- (void) release___android_util_Poolable :(android_util_Poolable*)n1
{
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    _r2.o = self;
    _r3.o = n1;
    _r0.o = JAVA_NULL;
    [_r2.o retain];
    [_r3.o retain];
    _r4.i = ((android_util_FinitePool*) _r2.o)->mInfinite_boolean;
    if (_r4.i != 0) goto label10;
    _r4.i = ((android_util_FinitePool*) _r2.o)->mPoolCount_int;
    _r1.i = ((android_util_FinitePool*) _r2.o)->mLimit_int;
    if (_r4.i >= _r1.i) goto label23;
    label10:;
    _r4.i = ((android_util_FinitePool*) _r2.o)->mPoolCount_int;
    _r4.i = _r4.i + 1;
    ((android_util_FinitePool*) _r2.o)->mPoolCount_int = _r4.i;
    _r0.o = ((android_util_FinitePool*) _r2.o)->mRoot_android_util_Poolable;
    [_r0.o retain];
    [((android_util_Poolable*) _r3.o) setNextPoolable___java_lang_Object:_r0.o];
    [((android_util_FinitePool*) _r2.o)->mRoot_android_util_Poolable release];
    ((android_util_FinitePool*) _r2.o)->mRoot_android_util_Poolable = _r3.o;
    [_r3.o retain];
    label23:;
    [_r0.o release];
    _r0.o = ((android_util_FinitePool*) _r2.o)->mManager_android_util_PoolableManager;
    [_r0.o retain];
    [((android_util_PoolableManager*) _r0.o) onReleased___android_util_Poolable:_r3.o];
    [_r0.o release];
    [_r2.o release];
    [_r3.o release];
    return;
}

@end

