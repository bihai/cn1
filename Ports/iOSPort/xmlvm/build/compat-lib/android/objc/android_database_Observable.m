#import "java_lang_IllegalArgumentException.h"
#import "java_util_ArrayList.h"
#import "java_lang_Class.h"
#import "java_lang_StringBuilder.h"
#import "java_lang_String.h"
#import "java_lang_IllegalStateException.h"

// Automatically generated by xmlvm2obj. Do not edit!


#import "android_database_Observable.h"
#import "org_xmlvm_iphone_NSObject.h"


@implementation android_database_Observable;

+ (void) initialize
{
    if (strcmp(class_getName(self), "android_database_Observable") == 0) {
    }
}

- (id) init
{
    if (self = [super init]) {
        mObservers_java_util_ArrayList = (id) JAVA_NULL;
    }
    return self;
}

- (void) dealloc
{
    [mObservers_java_util_ArrayList release];
    if (strcmp(object_getClassName(self), "android_database_Observable") == 0) {
        [self dealloc__];
    }
    [super dealloc];
}

- (void) __init_android_database_Observable__
{
    XMLVMElem _r0;
    XMLVMElem _r1;
    _r1.o = self;
    _r0.o = JAVA_NULL;
    [_r1.o retain];
    [((java_lang_Object*) _r1.o) __init_java_lang_Object__];
    _r0.o = [[java_util_ArrayList alloc] init];
    [((java_util_ArrayList*) _r0.o) __init_java_util_ArrayList__];
    [((android_database_Observable*) _r1.o)->mObservers_java_util_ArrayList release];
    ((android_database_Observable*) _r1.o)->mObservers_java_util_ArrayList = _r0.o;
    [_r0.o retain];
    [_r0.o release];
    [_r1.o release];
    return;
}
- (void) registerObserver___java_lang_Object :(java_lang_Object*)n1
{
    XMLVMElem _rtmp;
    id        _ex = JAVA_NULL;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    XMLVMElem _r5;
    XMLVMElem _r6;
    _r4.o = self;
    _r5.o = n1;
    _r0.o = JAVA_NULL;
    _r1.o = JAVA_NULL;
    _r2.o = JAVA_NULL;
    _r3.o = JAVA_NULL;
    [_r4.o retain];
    [_r5.o retain];
    if (_r5.o != JAVA_NULL) goto label10;
    _r0.o = [[java_lang_IllegalArgumentException alloc] init];
    _r1.o = @"The observer is null.";
    [((java_lang_IllegalArgumentException*) _r0.o) __init_java_lang_IllegalArgumentException___java_lang_String:_r1.o];
    [_ex release];
    _ex = _r0.o;
   _r0.o = JAVA_NULL;
    @throw _ex;
      label10:;
    [_r0.o release];
    _r0.o = ((android_database_Observable*) _r4.o)->mObservers_java_util_ArrayList;
    [_r0.o retain];
    [_r0.o acquireLockRecursive];
    @try {
    [_r1.o release];
    _r1.o = ((android_database_Observable*) _r4.o)->mObservers_java_util_ArrayList;
    [_r1.o retain];
    _r6.i = [((java_util_ArrayList*) _r1.o) contains___java_lang_Object:_r5.o];
    if (_r6.i == 0) goto label55;
    [_r1.o release];
    _r1.o = [[java_lang_IllegalStateException alloc] init];
    _r2.o = [[java_lang_StringBuilder alloc] init];
    [((java_lang_StringBuilder*) _r2.o) __init_java_lang_StringBuilder__];
    _r3.o = @"Observer ";
    _rtmp.o =  _r2.o;
    _r2.o = [((java_lang_StringBuilder*) _r2.o) append___java_lang_String:_r3.o];
    [_rtmp.o release];
    _rtmp.o = JAVA_NULL;
    _rtmp.o =  _r2.o;
    _r2.o = [((java_lang_StringBuilder*) _r2.o) append___java_lang_Object:_r5.o];
    [_rtmp.o release];
    _rtmp.o = JAVA_NULL;
    [_r3.o release];
    _r3.o = @" is already registered.";
    _rtmp.o =  _r2.o;
    _r2.o = [((java_lang_StringBuilder*) _r2.o) append___java_lang_String:_r3.o];
    [_rtmp.o release];
    _rtmp.o = JAVA_NULL;
    _rtmp.o =  _r2.o;
    _r2.o = [((java_lang_StringBuilder*) _r2.o) toString__];
    [_rtmp.o release];
    _rtmp.o = JAVA_NULL;
    [((java_lang_IllegalStateException*) _r1.o) __init_java_lang_IllegalStateException___java_lang_String:_r2.o];
    [_ex release];
    _ex = _r1.o;
   _r1.o = JAVA_NULL;
    @throw _ex;
  }
    @catch (id ex) {
        _ex = ex;
        goto label52;
    }
    label52:;
    @try {
    [_r1.o release];
    _r1.o = _ex; _ex = JAVA_NULL;
    [_r0.o releaseLockRecursive];
}
    @catch (id ex) {
        _ex = ex;
        goto label52;
    }
    [_ex release];
    _ex = _r1.o;
   _r1.o = JAVA_NULL;
    @throw _ex;
      label55:;
    @try {
    [_r1.o release];
    _r1.o = ((android_database_Observable*) _r4.o)->mObservers_java_util_ArrayList;
    [_r1.o retain];
    [((java_util_ArrayList*) _r1.o) add___java_lang_Object:_r5.o];
    [_r0.o releaseLockRecursive];
}
    @catch (id ex) {
        _ex = ex;
        goto label52;
    }
    [_r0.o release];
    [_r1.o release];
    [_r2.o release];
    [_r3.o release];
    [_r4.o release];
    [_r5.o release];
    [_ex release];
    return;
}
- (void) unregisterObserver___java_lang_Object :(java_lang_Object*)n1
{
    XMLVMElem _rtmp;
    id        _ex = JAVA_NULL;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    XMLVMElem _r5;
    XMLVMElem _r6;
    XMLVMElem _r7;
    _r5.o = self;
    _r6.o = n1;
    _r1.o = JAVA_NULL;
    _r2.o = JAVA_NULL;
    _r3.o = JAVA_NULL;
    _r4.o = JAVA_NULL;
    [_r5.o retain];
    [_r6.o retain];
    if (_r6.o != JAVA_NULL) goto label10;
    _r1.o = [[java_lang_IllegalArgumentException alloc] init];
    _r2.o = @"The observer is null.";
    [((java_lang_IllegalArgumentException*) _r1.o) __init_java_lang_IllegalArgumentException___java_lang_String:_r2.o];
    [_ex release];
    _ex = _r1.o;
   _r1.o = JAVA_NULL;
    @throw _ex;
      label10:;
    [_r1.o release];
    _r1.o = ((android_database_Observable*) _r5.o)->mObservers_java_util_ArrayList;
    [_r1.o retain];
    [_r1.o acquireLockRecursive];
    @try {
    [_r2.o release];
    _r2.o = ((android_database_Observable*) _r5.o)->mObservers_java_util_ArrayList;
    [_r2.o retain];
    _r0.i = [((java_util_ArrayList*) _r2.o) indexOf___java_lang_Object:_r6.o];
    _r7.i = -1;
    if (_r0.i != _r7.i) goto label56;
    [_r2.o release];
    _r2.o = [[java_lang_IllegalStateException alloc] init];
    _r3.o = [[java_lang_StringBuilder alloc] init];
    [((java_lang_StringBuilder*) _r3.o) __init_java_lang_StringBuilder__];
    _r4.o = @"Observer ";
    _rtmp.o =  _r3.o;
    _r3.o = [((java_lang_StringBuilder*) _r3.o) append___java_lang_String:_r4.o];
    [_rtmp.o release];
    _rtmp.o = JAVA_NULL;
    _rtmp.o =  _r3.o;
    _r3.o = [((java_lang_StringBuilder*) _r3.o) append___java_lang_Object:_r6.o];
    [_rtmp.o release];
    _rtmp.o = JAVA_NULL;
    [_r4.o release];
    _r4.o = @" was not registered.";
    _rtmp.o =  _r3.o;
    _r3.o = [((java_lang_StringBuilder*) _r3.o) append___java_lang_String:_r4.o];
    [_rtmp.o release];
    _rtmp.o = JAVA_NULL;
    _rtmp.o =  _r3.o;
    _r3.o = [((java_lang_StringBuilder*) _r3.o) toString__];
    [_rtmp.o release];
    _rtmp.o = JAVA_NULL;
    [((java_lang_IllegalStateException*) _r2.o) __init_java_lang_IllegalStateException___java_lang_String:_r3.o];
    [_ex release];
    _ex = _r2.o;
   _r2.o = JAVA_NULL;
    @throw _ex;
  }
    @catch (id ex) {
        _ex = ex;
        goto label53;
    }
    label53:;
    @try {
    [_r2.o release];
    _r2.o = _ex; _ex = JAVA_NULL;
    [_r1.o releaseLockRecursive];
}
    @catch (id ex) {
        _ex = ex;
        goto label53;
    }
    [_ex release];
    _ex = _r2.o;
   _r2.o = JAVA_NULL;
    @throw _ex;
      label56:;
    @try {
    [_r2.o release];
    _r2.o = ((android_database_Observable*) _r5.o)->mObservers_java_util_ArrayList;
    [_r2.o retain];
    _rtmp.o = [((java_util_ArrayList*) _r2.o) remove___int:_r0.i];
    [_rtmp.o release];
    [_r1.o releaseLockRecursive];
}
    @catch (id ex) {
        _ex = ex;
        goto label53;
    }
    [_r1.o release];
    [_r2.o release];
    [_r3.o release];
    [_r4.o release];
    [_r5.o release];
    [_r6.o release];
    [_ex release];
    return;
}
- (void) unregisterAll__
{
    id        _ex = JAVA_NULL;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    _r2.o = self;
    _r0.o = JAVA_NULL;
    _r1.o = JAVA_NULL;
    [_r2.o retain];
    _r0.o = ((android_database_Observable*) _r2.o)->mObservers_java_util_ArrayList;
    [_r0.o retain];
    [_r0.o acquireLockRecursive];
    @try {
    _r1.o = ((android_database_Observable*) _r2.o)->mObservers_java_util_ArrayList;
    [_r1.o retain];
    [((java_util_ArrayList*) _r1.o) clear__];
    [_r0.o releaseLockRecursive];
    [_r0.o release];
    [_r1.o release];
    [_r2.o release];
    [_ex release];
    return;
}
    @catch (id ex) {
        _ex = ex;
        goto label10;
    }
    label10:;
    @try {
    _r1.o = _ex; _ex = JAVA_NULL;
    [_r0.o releaseLockRecursive];
}
    @catch (id ex) {
        _ex = ex;
        goto label10;
    }
    [_ex release];
    _ex = _r1.o;
   _r1.o = JAVA_NULL;
    @throw _ex;
  }

@end

