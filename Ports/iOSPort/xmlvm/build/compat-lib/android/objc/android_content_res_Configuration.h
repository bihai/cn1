#import "xmlvm.h"
#import "java_lang_Object.h"
#import "java_lang_Comparable.h"

// For circular include:
@class java_lang_Comparable;
@class java_lang_Object;
@class java_lang_Exception;
@class java_util_Locale;
@class java_lang_StringBuilder;
@class java_lang_String;
@class android_content_res_Configuration;

// Automatically generated by xmlvm2obj. Do not edit!


	
@interface android_content_res_Configuration : java_lang_Object <java_lang_Comparable>
{
@public float fontScale_float;
@public int mcc_int;
@public int mnc_int;
@public java_util_Locale* locale_java_util_Locale;
@public int userSetLocale_boolean;
@public int screenLayout_int;
@public int touchscreen_int;
@public int keyboard_int;
@public int keyboardHidden_int;
@public int hardKeyboardHidden_int;
@public int navigation_int;
@public int orientation_int;

}
+ (void) initialize;
- (id) init;
+ (int) _GET_SCREENLAYOUT_SIZE_MASK;
+ (void) _PUT_SCREENLAYOUT_SIZE_MASK: (int) v;
+ (int) _GET_SCREENLAYOUT_SIZE_UNDEFINED;
+ (void) _PUT_SCREENLAYOUT_SIZE_UNDEFINED: (int) v;
+ (int) _GET_SCREENLAYOUT_SIZE_SMALL;
+ (void) _PUT_SCREENLAYOUT_SIZE_SMALL: (int) v;
+ (int) _GET_SCREENLAYOUT_SIZE_NORMAL;
+ (void) _PUT_SCREENLAYOUT_SIZE_NORMAL: (int) v;
+ (int) _GET_SCREENLAYOUT_SIZE_LARGE;
+ (void) _PUT_SCREENLAYOUT_SIZE_LARGE: (int) v;
+ (int) _GET_SCREENLAYOUT_SIZE_XLARGE;
+ (void) _PUT_SCREENLAYOUT_SIZE_XLARGE: (int) v;
+ (int) _GET_SCREENLAYOUT_LONG_MASK;
+ (void) _PUT_SCREENLAYOUT_LONG_MASK: (int) v;
+ (int) _GET_SCREENLAYOUT_LONG_UNDEFINED;
+ (void) _PUT_SCREENLAYOUT_LONG_UNDEFINED: (int) v;
+ (int) _GET_SCREENLAYOUT_LONG_NO;
+ (void) _PUT_SCREENLAYOUT_LONG_NO: (int) v;
+ (int) _GET_SCREENLAYOUT_LONG_YES;
+ (void) _PUT_SCREENLAYOUT_LONG_YES: (int) v;
+ (int) _GET_SCREENLAYOUT_COMPAT_NEEDED;
+ (void) _PUT_SCREENLAYOUT_COMPAT_NEEDED: (int) v;
+ (int) _GET_TOUCHSCREEN_UNDEFINED;
+ (void) _PUT_TOUCHSCREEN_UNDEFINED: (int) v;
+ (int) _GET_TOUCHSCREEN_NOTOUCH;
+ (void) _PUT_TOUCHSCREEN_NOTOUCH: (int) v;
+ (int) _GET_TOUCHSCREEN_STYLUS;
+ (void) _PUT_TOUCHSCREEN_STYLUS: (int) v;
+ (int) _GET_TOUCHSCREEN_FINGER;
+ (void) _PUT_TOUCHSCREEN_FINGER: (int) v;
+ (int) _GET_KEYBOARD_UNDEFINED;
+ (void) _PUT_KEYBOARD_UNDEFINED: (int) v;
+ (int) _GET_KEYBOARD_NOKEYS;
+ (void) _PUT_KEYBOARD_NOKEYS: (int) v;
+ (int) _GET_KEYBOARD_QWERTY;
+ (void) _PUT_KEYBOARD_QWERTY: (int) v;
+ (int) _GET_KEYBOARD_12KEY;
+ (void) _PUT_KEYBOARD_12KEY: (int) v;
+ (int) _GET_KEYBOARDHIDDEN_UNDEFINED;
+ (void) _PUT_KEYBOARDHIDDEN_UNDEFINED: (int) v;
+ (int) _GET_KEYBOARDHIDDEN_NO;
+ (void) _PUT_KEYBOARDHIDDEN_NO: (int) v;
+ (int) _GET_KEYBOARDHIDDEN_YES;
+ (void) _PUT_KEYBOARDHIDDEN_YES: (int) v;
+ (int) _GET_KEYBOARDHIDDEN_SOFT;
+ (void) _PUT_KEYBOARDHIDDEN_SOFT: (int) v;
+ (int) _GET_HARDKEYBOARDHIDDEN_UNDEFINED;
+ (void) _PUT_HARDKEYBOARDHIDDEN_UNDEFINED: (int) v;
+ (int) _GET_HARDKEYBOARDHIDDEN_NO;
+ (void) _PUT_HARDKEYBOARDHIDDEN_NO: (int) v;
+ (int) _GET_HARDKEYBOARDHIDDEN_YES;
+ (void) _PUT_HARDKEYBOARDHIDDEN_YES: (int) v;
+ (int) _GET_NAVIGATION_UNDEFINED;
+ (void) _PUT_NAVIGATION_UNDEFINED: (int) v;
+ (int) _GET_NAVIGATION_NONAV;
+ (void) _PUT_NAVIGATION_NONAV: (int) v;
+ (int) _GET_NAVIGATION_DPAD;
+ (void) _PUT_NAVIGATION_DPAD: (int) v;
+ (int) _GET_NAVIGATION_TRACKBALL;
+ (void) _PUT_NAVIGATION_TRACKBALL: (int) v;
+ (int) _GET_NAVIGATION_WHEEL;
+ (void) _PUT_NAVIGATION_WHEEL: (int) v;
+ (int) _GET_ORIENTATION_UNDEFINED;
+ (void) _PUT_ORIENTATION_UNDEFINED: (int) v;
+ (int) _GET_ORIENTATION_PORTRAIT;
+ (void) _PUT_ORIENTATION_PORTRAIT: (int) v;
+ (int) _GET_ORIENTATION_LANDSCAPE;
+ (void) _PUT_ORIENTATION_LANDSCAPE: (int) v;
+ (int) _GET_ORIENTATION_SQUARE;
+ (void) _PUT_ORIENTATION_SQUARE: (int) v;
- (void) __init_android_content_res_Configuration__;
- (void) __init_android_content_res_Configuration___android_content_res_Configuration :(android_content_res_Configuration*)n1;
- (java_lang_String*) toString__;
- (void) setToDefaults__;
- (void) makeDefault__;
- (int) describeContents__;
- (int) compareTo___android_content_res_Configuration :(android_content_res_Configuration*)n1;
- (int) equals___android_content_res_Configuration :(android_content_res_Configuration*)n1;
- (int) equals___java_lang_Object :(java_lang_Object*)n1;
- (int) hashCode__;
- (int) compareTo___java_lang_Object :(java_lang_Object*)n1;
- (BOOL) isEqual:(id)o;

@end

